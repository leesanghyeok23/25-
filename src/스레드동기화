

스레드 동기화 (Thread Synchronization)란?
 - 스레드 동기화는 멀티스레드 환경에서 여러 스레드가 공유 자원에 접근할 때 발생할 수 있는 문제를 방지하기 위해 
   스레드의 실행 순서를 제어하는 기법이다.
   
스레드 동기화 기법이 왜 필요한가?
- 멀티스레드 프로그래밍에서 여러 스레드가 **공유 자원(변수, 파일, 데이터베이스 등)에 동시에 접근하면 
  데이터 충돌이나 불일치 문제(경쟁 상태, race condition)**가 발생할 수 있다.
  예를 들어, 두 개의 스레드가 같은 변수 값을 수정한다고 할 때, 
  실행 순서에 따라 예상치 못한 결과가 나올 수 있다. 이를 방지하기 위해 공유자원에 스레드 동기화가 필요하다.
  
  
자바에서 스레드 동기화 기법

1. synchronized 예약어 사용(메소드 동기화)

설명
 - synchronized 키워드를 사용하면 한 번에 하나의 스레드만 해당 메서드에 접근 가능함.
 - 공유 객체의 데이터 일관성을 보장하지만, 다른 스레드가 대기해야 하므로 성능 저하가 발생할 수 있음.

예제. SynchronizedMethodExample.java


2. synchronized 블록 (특정 코드 블록 동기화)

설명
 - 메서드 전체가 아니라 특정 코드 블록만 동기화하여 필요한 부분만 잠그므로 성능 향상 가능.
 - synchronized (lock) 형태로 사용하며, 객체를 기준으로 락을 설정함.
 
예제. SynchronizedBlockExample.java
 
 
 3. ReentrantLock (명시적 락 제어)
 -synchronized보다 더 유연한 명시적 락을 사용할 수 있음.
 -lock.lock()으로 락을 얻고, lock.unlock()으로 해제해야함.
 -try-finally를 사용ㅎ여 항상 락을 해제하는것이 중요함
 
 예제.ReentrantLock.Example
 
 
 
 
 
 
 








